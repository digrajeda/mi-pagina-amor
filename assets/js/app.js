const qs = (s, c = document) => c.querySelector(s);
const qsa = (s, c = document) => Array.from(c.querySelectorAll(s));

document.addEventListener("DOMContentLoaded", () => {
  // Si alguien abri√≥ home.html directo, rebotamos (doble guard)
  if (sessionStorage.getItem("unlocked") !== "1") {
    location.replace("index.html");
    return;
  }

  // Fondo corazones, men√∫ y datos visibles
  startFloatingHearts();
  initMenu();
  applyConfig();

  // Carta, animaciones y galer√≠a
  updateDaysTogether();
  initRevealOnScroll();
  startTypedLetter();
  initLightbox();
  initMusic();
});

function applyConfig() {
  qs("#brandNames").textContent = window.CONFIG.coupleNames;
  qs("#nombreCorto").textContent = window.CONFIG.nombreCorto;
  qs("#firmaNombre").textContent = window.CONFIG.firma;
  qs("#mesesText").textContent = window.CONFIG.mesesTexto;
}

function initMenu() {
  const toggle = qs("#menuToggle");
  const list = qs("#menuList");
  toggle?.addEventListener("click", () => list.classList.toggle("open"));
  qsa("#menuList a").forEach(a => a.addEventListener("click", () => list.classList.remove("open")));
}

function updateDaysTogether() {
  try {
    const start = new Date(window.CONFIG.anniversaryDate + "T00:00:00");
    const now = new Date();
    const diff = Math.floor((now - start) / (1000 * 60 * 60 * 24));
    qs("#diasJuntos").textContent = diff >= 0 ? diff : "‚Äî";
  } catch { qs("#diasJuntos").textContent = "‚Äî"; }
}

function initRevealOnScroll() {
  const io = new IntersectionObserver((entries) => {
    for (const e of entries) if (e.isIntersecting) { e.target.classList.add("visible"); io.unobserve(e.target); }
  }, { threshold: 0.12 });
  qsa(".reveal").forEach(el => io.observe(el));
}

function startTypedLetter() {
  const el = qs("#typed");
  const texto = `Mi amor ü´∂

Contigo aprend√≠ que un abrazo puede sentirse como casita y que re√≠r es mi idioma favorito cuando est√°s cerca. Eres mi lugar seguro, la pausa bonita en medio del ruido. Gracias por hacer que los d√≠as normales se vuelvan extraordinarios y por esa forma tuya de mirarme que hace que todo tenga sentido.


Me gusta c√≥mo nos encontramos en los detalles: las manos que se buscan sin pensarlo, las miradas, las conversaciones que se alargan aunque ya sepamos el final. Me haces mejor persona, m√°s paciente, m√°s valiente, m√°s yo.


Prometo cuidar lo nuestro con acciones peque√±as y constantes: celebrar tus logros como m√≠os, acompa√±arte cuando lo dif√≠cil se asome, escucharte de verdad, preguntar c√≥mo est√°s y quedarme para escuchar la respuesta. Prometo respetar tus tiempos, tus sue√±os y tu paz, re√≠rnos, bailar aunque no sepamos y elegirte cada d√≠a.


Sue√±o con los planes que todav√≠a no escribimos: desayunos sin prisa, viajes chiquitos, pel√≠culas a medias, caminatas largas, fotos borrosas y tambi√©n tremendas playlists que en el futuro nos devuelvan a este instante, metas que iremos tachando juntitos.


Gracias por tu paciencia, por tu humor, por tus abrazos que arreglan d√≠as enteros, por creer en nosotros incluso cuando el mundo corre. Gracias por quedarte, por empujarme hacia mis mejores versiones y por hacerme sentir querida sin condiciones.


Por m√°s comidas, pel√≠culas, risas compartidas, canciones a destiempo y besitos que curan todo. Lo que venga, contigo. Te amo con todo mi coraz√≥n.`;
  let i = 0, speed = 18;
  (function tipo() { if (i <= texto.length) { el.textContent = texto.slice(0, i); i++; setTimeout(tipo, speed); } })();
}

function initLightbox() {
  const lightbox = qs("#lightbox");
  const lightImg = qs("#lightboxImg");
  const closeBtn = qs("#closeLightbox");
  qsa(".thumb").forEach(img => img.addEventListener("click", () => {
    lightImg.src = img.src; lightbox.classList.remove("hidden"); document.body.style.overflow = "hidden";
  }));
  function close() { lightbox.classList.add("hidden"); document.body.style.overflow = ""; lightImg.src = ""; }
  closeBtn.addEventListener("click", close);
  lightbox.addEventListener("click", e => { if (e.target === lightbox) close(); });
  window.addEventListener("keydown", e => { if (e.key === "Escape") close(); });
}

function initMusic() {
  const audio = document.getElementById("audio");
  const btnPlay = document.getElementById("btnPlay");
  if (!btnPlay || !audio) return;
  btnPlay.addEventListener("click", async () => {
    try {
      if (audio.paused) { await audio.play(); btnPlay.textContent = "Pausar m√∫sica ‚è∏"; }
      else { audio.pause(); btnPlay.textContent = "Reproducir m√∫sica ‚ñ∂"; }
    } catch { alert("Si no suena, toca de nuevo üôÇ"); }
  });
}

function startFloatingHearts() {
  const cont = document.getElementById("bg-hearts");
  setInterval(() => {
    const h = document.createElement("div");
    h.className = "heart";
    const size = Math.random() * 14 + 8;
    const left = Math.random() * 100;
    const dur = Math.random() * 6 + 6;
    h.style.width = size + "px";
    h.style.height = size + "px";
    h.style.left = left + "vw";
    h.style.bottom = "-20px";
    h.style.animationDuration = dur + "s";
    cont.appendChild(h);
    setTimeout(() => cont.removeChild(h), dur * 1000);
  }, 500);
}
